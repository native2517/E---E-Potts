<?php 
include "simplepie.inc";

/*
 * TODO: Format the date and time properly for tweets
 * TODO: Ensure that the tweets are updated when the settings are saved.
 *
 *
*/
function twitterblock_block($op = "list",$delta = 0, $edit = array()) {
				switch ($op) {
								case 'list':

												$blocks[0]['info']  = t('Twitter Block');
												return $blocks;
												break;
								case 'view':

												$blocks['subject'] = t('Recent Tweets');

												$blocks['content'] = _twitterblock_get_tweets();

												return $blocks;
												break;
								case 'configure':

												$form['twitterblock_username'] = array(
																				'#type' => 'textfield',
																				'#title'=> 'Twitter Username',
																				'#default_value' => variable_get('twitterblock_username','prototypepro')
												);

												$form['twitterblock_num_of_tweets'] = array(
																				'#type' => 'textfield',
																				'#title' => t('Number Of Tweets To Display'),
																				'#default_value' => variable_get('twitterblock_num_of_tweets','5')
												);

												$form['twitterblock_ignorereplies'] = array(
																				'#type' => 'radios',
																				'#title' => t('Don\'t show tweets where you reply to someone?'),
																				'#default_value' => variable_get('twitterblock_ignorereplies',0),
																				'#options' => array(t('Yes'),t('No'))
												);

												$form['twitterblock_tweetlink'] = array(
																				'#type' => 'select',
																				'#title'=> t('Link each tweet to'),
																				'#default_value' => variable_get('twitterblock_tweetlink','profile'),
																				'#options' => array(
																												'profile'=> t("The Twitter Profile Page"),
																												'tweet'=>t("The Tweet's Page"),
																												'nothing'=> t("Nothing. Don't make it a link")
																				)
												);
												$form['twitterblock_updateevery'] = array(
																				'#type' => 'select',
																				'#title'=> t('Update Tweets Every'),
																				'#description' => '<strong>Important Note: </strong>Your twitter account has a request quota of 100 requests per hour. This quota is shared with twitter clients like TweetDeck or Twhirl. Each update costs one request. So updating every 5 minutes takes 12 requests per hour. ',
																				'#default_value' => variable_get('twitterblock_updateevery',2),
																				'#options' => array('5'=>'5 Minutes','10'=>'10 Minutes', '15'=>'15 Minutes', '20'=>'20 Minutes', '25'=>'25 Minutes', '30'=>'30 Minutes')
												);

												return $form;
												break;
								case 'save':

												$username = $edit['twitterblock_username'];
												//make a request to the user profile page
												$twitter_profile_html = file_get_contents("http://www.twitter.com/$username");
												if ($twitter_profile_html) {

																preg_match("@[0-9]+\.rss@",$twitter_profile_html,$matches);

																$username = @$matches[0];

																if (!empty($username)) {

																				$feedfile = $matches[0];
																				variable_set("twitterblock_feedfile",$feedfile);
																				$num = intval($edit['twitterblock_num_of_tweets']);
																				$num = ($num>1)?$num:1;

																				variable_set('twitterblock_username',$edit['twitterblock_username']);
																				variable_set('twitterblock_num_of_tweets',$num);


																				variable_set('twitterblock_ignorereplies',$edit['twitterblock_ignorereplies']);
																				variable_set('twitterblock_tweetlink',$edit['twitterblock_tweetlink']);
																				variable_set('twitterblock_updateevery',$edit['twitterblock_updateevery']);

																				//set the last update time to time past the update every section. this will force the
																				//block below to fetch the feed afresh
																				variable_set('twitterblock_lastupdate',time()-60*$edit['twitterblock_updateevery']+20);

																				_twitterblock_updatetweets();



																}
																else {
																				drupal_set_message("Unable to save settings. The username doesn't exist.");
																}
												}
												else {
																drupal_set_message("Unable to save settings. Twitter could not be reached to get relevant information. Please try again later.");
												}
												break;

				}

}

function _twitterblock_get_tweets() {
				$resp ="";
				$ignoreReplies = (variable_get('twitterblock_ignorereplies',0) == 0);
				$maxTweets = variable_get('twitterblock_num_of_tweets',5);
				$showTime = (variable_get('twitterblock_displaytime',0) == 0);
				$twitterlink = variable_get('twitterblock_tweetlink','tweet');
				$updateEvery = variable_get('twitterblock_updateevery',2);
				$requiredDifference = 60*($updateEvery);
				$lastUpdate = variable_get('twitterblock_lastupdate',time()-900);
				$difference = time()-$lastUpdate;

				$username = variable_get("twitterblock_username","expeditionpost");

				if ($difference >= $requiredDifference) {
								$tweets = _twitterblock_updatetweets();
								$statuses = $tweets;

								if (count($tweets)) {
												$statuses = $tweets;
								}
								else {
												$statuses = _twitterblock_get_cached_tweets();
												if (count($statuses)==0) {
																return "No tweets were found. Please check whether the server is connected to the internet.";
												}
								}
				}
				else {
								$statuses = _twitterblock_get_cached_tweets();
				}


				if (count($statuses)) {
								ob_start();
								$count = 0;
								echo "<div class=\"twitterblock_tweets\">";
								
								foreach ($statuses as $status) {

												$text = preg_replace("@^[^:]*:@","",$status['text']);



												echo '<div>';
												if ($ignoreReplies==true) {
																if (strpos($text,"@")!=0) {

																				echo '</div>';
																				continue;
																}
												}

												if ($twitterlink == 'nothing') {

																echo '<div class="twitterblock_tweet">', $text, "</div>";
												}
												else if ($twitterlink == "profile") {
																$href = "http://twitter.com/$username";
																echo "<a href=\"$href\">$text</a>";
												}
												else {
																$href .= $status['url'];
																echo "<a href=\"$href\">$text</a>";
												}

												echo '</div>';
												$count++;
												if ($count == $maxTweets)
																break;

								}
								echo "</div>";
								$resp = ob_get_clean();
				}
				else
								$resp = "";

				return $resp;
}


function _twitterblock_get_cached_tweets() {
				$string = variable_get('twitterblock_updates',' ');
				$statuses = unserialize($string);
				return $statuses;
}

function _twitterblock_updatetweets() {
				$feedFile = variable_get("twitterblock_feedfile",0);
				$feedURL = "http://twitter.com/statuses/user_timeline/".$feedFile;

				$feed = @new SimplePie($feedURL);
				$feed->enable_cache(false);

				$realstatuses = array();

				if ($feed->get_item_quantity()>0) {

								$items = $feed->get_items();
								$tweets = array();
								foreach ($items as $tweet) {
												$url = $tweet->get_link();
												$text = $tweet->get_content();
												$time = $tweet->get_date('j F Y | at H:i');


												$twit = array('text'=>$text,'url'=>$url,'time'=>$time);
												array_push($tweets,$twit);
								}
								$tweets_serialized =  (string) serialize($tweets);
								variable_set('twitterblock_updates',$tweets_serialized);
								variable_set('twitterblock_lastupdate',time());
								return $tweets;
				}
				else
								return array();
}